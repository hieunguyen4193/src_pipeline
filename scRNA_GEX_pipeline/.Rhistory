a <- RunUMAP(a, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP_411_2", chosen.assay), seed.use = 411)
DimPlot(a, reduction = "RNA_UMAP_411_2")
set.seed(411)
a <- RunUMAP(a, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP_411_2", chosen.assay), seed.use = NULL)
DimPlot(a, reduction = "RNA_UMAP_411_2")
a
a$seurat_clusters
a
DimPlot(a, reduction = "RNA_UMAP")
a <- RunUMAP(a, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP_42", chosen.assay), seed.use = 42)
DimPlot(a, reduction = "RNA_UMAP_42")
set.seed(411)
a <- RunUMAP(a, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP_42", chosen.assay), seed.use = 42)
DimPlot(a, reduction = "RNA_UMAP_42")
DimPlot(a, reduction = "RNA_UMAP_42")
DimPlot(a, reduction = "RNA_UMAP")
DimPlot(a, reduction = "RNA_UMAP_42")
#####----------------------------------------------------------------------#####
#
# 02: Merge first experiment data with the deeper experiment data, transfer labels
# to eliminate the CD45 cells. Keep onl GFP cells for further downstream analysis
#
#####----------------------------------------------------------------------#####
##### clean up env
gc()
rm(list = ls())
##### import libraries
library(data.table)
library(viridis)
library(xlsx)
#####----------------------------------------------------------------------#####
#
# CONFIGURATIONS
#
#####----------------------------------------------------------------------#####
integration <- TRUE
analysis.round.1st.exp <- "2nd"
analysis.round <- "2nd"
num.dim.integration <- 25
num.PCA <- 25
num.dim.cluster <- 25
path.to.pipeline.src <- "/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline"
path.to.output <- "/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/merge_downstream_analysis"
dir.create(path.to.output, showWarnings = FALSE)
save_figures_to_report <- "/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/manually_saved_figures"
dir.create(save_figures_to_report, showWarnings = FALSE)
path2src <- file.path(path.to.pipeline.src, "processes_src")
set.seed(411)
PROJECT <- "LKopplin_merge_dataset"
#####----------------------------------------------------------------------#####
#
# COMPILE HELPER FUNCTIONS
#
#####----------------------------------------------------------------------#####
source(file.path(path2src, "import_libraries.R"))
source(file.path(path2src, "s8_integration_and_clustering.R"))
#####----------------------------------------------------------------------#####
#
# PATH TO THE FIRST DATASET
#
#####----------------------------------------------------------------------#####
path.to.first.exp <- sprintf("/home/hieunguyen/CRC1382/src/LKopplin_first_exp_scRNA_data/OUTPUT/%s_round", analysis.round.1st.exp)
all_first_exprs <- Sys.glob(file.path(path.to.first.exp, "*"))
names(all_first_exprs) <-  to_vec(for(exprs in all_first_exprs) str_replace(basename(exprs), sprintf("_%s_round", analysis.round.1st.exp), ""))
#####----------------------------------------------------------------------#####
#
# PATH TO THE DEEPER DATASET
#
#####----------------------------------------------------------------------#####
path.to.deeper.exp <- sprintf("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/%s_round", analysis.round)
all_deeper_exprs <- Sys.glob(file.path(path.to.deeper.exp, "*"))
names(all_deeper_exprs) <-  to_vec(for(exprs in all_deeper_exprs) str_replace(basename(exprs), sprintf("_%s_round", analysis.round), ""))
#####----------------------------------------------------------------------#####
#
# BEGIN THE MAIN ANALYSIS
#
#####----------------------------------------------------------------------#####
all_exprs <- c(all_first_exprs, all_deeper_exprs)
data.list <- list()
##### PROCESSING THE FIRST DATASET
# for (i in seq_along(all_first_exprs)){
#   data.list[[i]] <- readRDS(Sys.glob(file.path(all_first_exprs[[i]], "s8a_output", "*.rds")))
# }
#
# first.exp.s.obj <- merge(x = data.list[[1]],
#                y = unlist(data.list[2:length(data.list)]),
#                merge.data = FALSE,
#                add.cell.ids = names(all_first_exprs),
#                project = PROJECT)
#
# chosen.assay <- "RNA"
# DefaultAssay(first.exp.s.obj) <- chosen.assay
#
# first.exp.s.obj <- NormalizeData(first.exp.s.obj) # ---> use Log Normalized
# first.exp.s.obj <- FindVariableFeatures(first.exp.s.obj, selection.method = "vst")
# first.exp.s.obj <- ScaleData(first.exp.s.obj, features = rownames(first.exp.s.obj))
#
# first.exp.s.obj <- RunPCA(first.exp.s.obj, npcs = 25, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
# first.exp.s.obj <- RunUMAP(first.exp.s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:25, reduction.name=sprintf("%s_UMAP", chosen.assay))
#
##### PROCESSING THE DEEPER DATASET
data.list <- list()
for (i in seq_along(all_deeper_exprs)){
data.list[[i]] <- readRDS(Sys.glob(file.path(all_deeper_exprs[[i]], "s8a_output", "*.rds")))
}
deeper.exp.s.obj <- merge(x = data.list[[1]],
y = unlist(data.list[2:length(data.list)]),
merge.data = FALSE,
add.cell.ids = names(all_deeper_exprs),
project = PROJECT)
chosen.assay <- "RNA"
DefaultAssay(deeper.exp.s.obj) <- chosen.assay
deeper.exp.s.obj <- NormalizeData(deeper.exp.s.obj) # ---> use Log Normalized
deeper.exp.s.obj <- FindVariableFeatures(deeper.exp.s.obj, selection.method = "vst")
deeper.exp.s.obj <- ScaleData(deeper.exp.s.obj, features = rownames(deeper.exp.s.obj))
deeper.exp.s.obj <- RunPCA(deeper.exp.s.obj, npcs = 25, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
deeper.exp.s.obj <- RunUMAP(deeper.exp.s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:25,
reduction.name=sprintf("%s_UMAP", chosen.assay),
seed.use= 411)
##### No batch effect in 4 samples of FIRST EXP.
# umap_first_exp <- DimPlot(object = first.exp.s.obj, reduction = "RNA_UMAP", group.by = "name", label = TRUE, label.box = TRUE, repel = TRUE) +
#   ggtitle("UMAP: First experiment, split by sample")
##### CD45 (Teff) and GFP (Tregs) build distinct clusters
# umap_first_exp_stage <- DimPlot(object = first.exp.s.obj, reduction = "RNA_UMAP", group.by = "stage", label = TRUE, label.box = TRUE, repel = TRUE) +
#   ggtitle("UMAP: First experiment, split by cell type")
# ggsave(plot = umap_first_exp + umap_first_exp_stage,
#        filename = file.path(save_figures_to_report, "first_experiment_UMAP.png"), device='png', dpi=300,
#        width = 20, height = 10, units = "in")
deeper_exp_umap <- DimPlot(object = deeper.exp.s.obj, reduction = "RNA_UMAP", group.by = "name", label = TRUE, label.box = TRUE, repel = TRUE)
# ggsave(plot = deeper_exp_umap,
#        filename = file.path(save_figures_to_report, "deeper_exp_UMAP.png"), device='png', dpi=300,
#        width = 15, height = 10, units = "in")
#####----------------------------------------------------------------------#####
#
# INTEGRATION AND TRANSFER LABEL BY SEURAT
#
#####----------------------------------------------------------------------#####
deeper_exp_umap
library("packageRank")
packageHistory("Seurat")
deeper.exp.s.obj <- RunUMAP(deeper.exp.s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:25,
reduction.name=sprintf("%s_UMAP", chosen.assay),
seed.use= 42)
deeper_exp_umap <- DimPlot(object = deeper.exp.s.obj, reduction = "RNA_UMAP", group.by = "name", label = TRUE, label.box = TRUE, repel = TRUE)
deeper_exp_umap
deeper.exp.s.obj <- RunUMAP(deeper.exp.s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:25,
reduction.name=sprintf("%s_UMAP", chosen.assay),
seed.use= 411)
deeper_exp_umap <- DimPlot(object = deeper.exp.s.obj, reduction = "RNA_UMAP", group.by = "name", label = TRUE, label.box = TRUE, repel = TRUE)
deeper_exp_umap
missing(seed)
missing(seed)
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
gc()
rm(list = ls())
library(Seurat)
chosen.assay <- "RNA"
rerun_umap <- function(tmp, using.seed){
chosen.assay = "RNA"
tmp <- RunPCA(tmp, npcs = 25, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
tmp <- RunUMAP(tmp, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP", chosen.assay),
seed.use = using.seed, umap.method = "uwot")
return(tmp)
}
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
gc()
rm(list = ls())
library(Seurat)
chosen.assay <- "RNA"
rerun_umap <- function(tmp, using.seed){
chosen.assay = "RNA"
tmp <- RunPCA(tmp, npcs = 25, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
tmp <- RunUMAP(tmp, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP", chosen.assay),
seed.use = using.seed, umap.method = "uwot")
return(tmp)
}
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
tmp <- RunPCA(a, npcs = 25, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
tmp <- RunUMAP(tmp, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP", chosen.assay))
DimPlot(tmp, reduction = "RNA_UMAP")
tmp <- RunUMAP(tmp, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 42)
DimPlot(tmp, reduction = "RNA_UMAP")
tmp <- RunUMAP(tmp, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 411)
DimPlot(tmp, reduction = "RNA_UMAP")
tmp
a
tmp <- RunUMAP(tmp, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 410)
DimPlot(tmp, reduction = "RNA_UMAP")
tmp <- RunUMAP(tmp, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:25, reduction.name=sprintf("%s_UMAP", chosen.assay))
DimPlot(tmp, reduction = "RNA_UMAP")
View(tmp)
gc()
rm(list = ls())
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
b = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s8_output/LKopplin_deeper_data.output.s8a.rds")
b = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s8a_output/LKopplin_deeper_data.output.s8a.rds")
gc()
rm(list = ls())
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
b = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s8a_output/LKopplin_deeper_data.output.s8a.rds")
num.PCA = 25
num.PC.used.in.UMAP = 25
chosen.assay <- "RNA"
DefaultAssay(s.obj) <- chosen.assay
s.obj = a
s.obj <- RunPCA(s.obj, npcs = num.PCA, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
s.obj <- RunUMAP(s.obj, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:num.PC.used.in.UMAP, reduction.name=sprintf("%s_UMAP", chosen.assay))
# clustering
s.obj <- FindNeighbors(s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:num.PC.used.in.Clustering)
num.PC.used.in.Clustering = 25
# clustering
s.obj <- FindNeighbors(s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:num.PC.used.in.Clustering)
s.obj <- FindClusters(s.obj,
resolution = 0.5)
DimPlot(s.obj, reduction = "RNA_UMAP")
b$seurat_clusters
b$seurat_clusters - s.obj$seurat_clusters
DimPlot(b, reduction = "RNA_UMAP")
s.obj <- RunUMAP(s.obj, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:num.PC.used.in.UMAP, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 411)
# clustering
s.obj <- FindNeighbors(s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:num.PC.used.in.Clustering)
s.obj <- FindClusters(s.obj,
resolution = 0.5)
DimPlot(s.obj, reduction = "RNA_UMAP")
packageVersion("Seurat")
packageVersion("umap")
packageHistory("Seurat")
remove.packages("Seurat")
install.packages("https://github.com/satijalab/seurat/archive/refs/tags/v4.1.0.tar.gz", type = "source", repos = NULL)
gc()
rm(list = ls())
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
b = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s8a_output/LKopplin_deeper_data.output.s8a.rds")
num.PCA = 25
num.PC.used.in.UMAP = 25
num.PC.used.in.Clustering = 25
chosen.assay <- "RNA"
DefaultAssay(s.obj) <- chosen.assay
s.obj = a
DefaultAssay(s.obj) <- chosen.assay
s.obj <- RunPCA(s.obj, npcs = num.PCA, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
s.obj <- RunUMAP(s.obj, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:num.PC.used.in.UMAP, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 411)
# clustering
s.obj <- FindNeighbors(s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:num.PC.used.in.Clustering)
s.obj <- FindClusters(s.obj,
resolution = 0.5)
DimPlot(s.obj, reduction = "RNA_UMAP")
DimPlot(b, reduction = "RNA_UMAP")
gc()
rm(list = ls())
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
b = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s8a_output/LKopplin_deeper_data.output.s8a.rds")
num.PCA = 25
num.PC.used.in.UMAP = 25
num.PC.used.in.Clustering = 25
chosen.assay <- "RNA"
s.obj = a
DefaultAssay(s.obj) <- chosen.assay
gc()
rm(list = ls())
library(Seurat)
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
b = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s8a_output/LKopplin_deeper_data.output.s8a.rds")
num.PCA = 25
num.PC.used.in.UMAP = 25
num.PC.used.in.Clustering = 25
chosen.assay <- "RNA"
s.obj = a
DefaultAssay(s.obj) <- chosen.assay
s.obj <- RunPCA(s.obj, npcs = num.PCA, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
s.obj <- RunUMAP(s.obj, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:num.PC.used.in.UMAP, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 411)
# clustering
s.obj <- FindNeighbors(s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:num.PC.used.in.Clustering)
s.obj <- FindClusters(s.obj,
resolution = 0.5)
DimPlot(s.obj, reduction = "RNA_UMAP")
DimPlot(b, reduction = "RNA_UMAP")
?reducedDim
packageVersion("SingleCellExperiment")
s.obj <- RunUMAP(s.obj, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:num.PC.used.in.UMAP, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 42)
# clustering
s.obj <- FindNeighbors(s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:num.PC.used.in.Clustering)
s.obj <- FindClusters(s.obj,
resolution = 0.5)
DimPlot(s.obj, reduction = "RNA_UMAP")
DimPlot(b, reduction = "RNA_UMAP")
gc()
rm(list = ls())
library(Seurat)
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
b = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s8a_output/LKopplin_deeper_data.output.s8a.rds")
num.PCA = 25
num.PC.used.in.UMAP = 25
num.PC.used.in.Clustering = 25
chosen.assay <- "RNA"
s.obj = a
DefaultAssay(s.obj) <- chosen.assay
s.obj <- RunPCA(s.obj, npcs = num.PCA, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
s.obj <- RunUMAP(s.obj, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:num.PC.used.in.UMAP, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 42)
# clustering
s.obj <- FindNeighbors(s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:num.PC.used.in.Clustering)
s.obj <- FindClusters(s.obj,
resolution = 0.5)
DimPlot(s.obj, reduction = "RNA_UMAP")
DimPlot(b, reduction = "RNA_UMAP")
packageVersion("uwot")
library("packageRank")
packageHistory("uwot")
remove.packages("uwot")
install.packages("https://github.com/jlmelville/uwot/archive/refs/tags/v0.1.11.tar.gz", type = "source", repos = NULL)
gc()
rm(list = ls())
library(Seurat)
a = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s6_output/LKopplin_deeper_data.output.s6.rds")
b = readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s8a_output/LKopplin_deeper_data.output.s8a.rds")
num.PCA = 25
num.PC.used.in.UMAP = 25
num.PC.used.in.Clustering = 25
chosen.assay <- "RNA"
s.obj = a
DefaultAssay(s.obj) <- chosen.assay
s.obj <- RunPCA(s.obj, npcs = num.PCA, verbose = FALSE, reduction.name=sprintf("%s_PCA", chosen.assay))
s.obj <- RunUMAP(s.obj, reduction = sprintf("%s_PCA", chosen.assay),
dims = 1:num.PC.used.in.UMAP, reduction.name=sprintf("%s_UMAP", chosen.assay), seed.use = 42)
# clustering
s.obj <- FindNeighbors(s.obj, reduction = sprintf("%s_PCA", chosen.assay), dims = 1:num.PC.used.in.Clustering)
s.obj <- FindClusters(s.obj,
resolution = 0.5)
DimPlot(s.obj, reduction = "RNA_UMAP")
DimPlot(b, reduction = "RNA_UMAP")
DimPlot(s.obj, reduction = "RNA_UMAP")
DimPlot(s.obj, reduction = "RNA_UMAP")
DimPlot(b, reduction = "RNA_UMAP")
?FindClusters
gc()
rm(list = ls())
library(Seurat)
a <- readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT_release_01092022/1st_round/GFP_m1_1st_round/s3_output/LKopplin_deeper_data.output.s3.rds")
b <- readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m1_1st_round/s3_output/LKopplin_deeper_data.output.s3.rds")
a
b
a <- readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT_release_01092022/1st_round/GFP_m2_1st_round/s3_output/LKopplin_deeper_data.output.s3.rds")
b <- readRDS("/home/hieunguyen/CRC1382/src/211227_deeper_scRNA_LKopplin/OFFICIAL/high_confidence_VDJ_contigs/OUTPUT/1st_round/GFP_m2_1st_round/s3_output/LKopplin_deeper_data.output.s3.rds")
a
b
packageVersion("uwot")
library("packageRank")
packageHistory("uwot")
a
b
gc()
rm(list = ls())
my_random_seed <- 42
# __________GEX DATA ANALYSIS PIPELINE__________
path.to.pipeline.src <- "/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline"
path2src <- file.path(path.to.pipeline.src, "processes_src")
set.seed(my_random_seed)
analysis.round <- "1st"
source(file.path(path2src, "import_libraries.R"))
source(file.path(path.to.pipeline.src, "scRNA_GEX_pipeline.R"))
path2input <- "/home/hieunguyen/CRC1382/storage/220311_Berres_MiedIII_scCITEseq/preprocessed_input/GEX"
path.to.output <- sprintf("/home/hieunguyen/CRC1382/src/220311_Berres_MiedIII_scCITEseq/OUTPUT/%s_round", analysis.round)
dir.create(path.to.output, showWarnings = FALSE)
# _____stage lst for single sample_____
stage_lst <- hash()
stage_lst[["LV20"]] <- c(LV20 = "LV")
stage_lst[["LV21"]] <- c(LV21 = "LV")
stage_lst[["PV20"]] <- c(PV20 = "PV")
stage_lst[["PV21"]] <- c(PV21 = "PV")
MINCELLS  <- 0
MINGENES  <- 0
PROJECT <- "AGBerres_citeSEQ"
save.RDS <- list(s1 = TRUE,
s2 = TRUE,
s3 = TRUE,
s4 = TRUE,
s5 = TRUE,
s6 = TRUE,
s7 = FALSE,
s8 = TRUE,
s8a = TRUE,
s9 = TRUE)
sw <- list(s1 = "on",
s2 = "on",
s3 = "on",
s4 = "on",
s5 = "on",
s6 = "on",
s7 = "off",
s8 = "off",
s8a = "on",
s9 = "on")
rerun <- list(s1 = FALSE,
s2 = FALSE,
s3 = FALSE,
s4 = FALSE,
s5 = FALSE,
s6 = FALSE,
s7 = FALSE,
s8 = FALSE,
s8a = FALSE,
s9 = FALSE)
filter.thresholds <- list(nFeatureRNAfloor = NULL,
nFeatureRNAceiling = NULL,
nCountRNAfloor = NULL,
nCountRNAceiling = NULL,
pct_mitofloor = NULL,
pct_mitoceiling = 10,
pct_ribofloor = NULL,
pct_riboceiling = NULL)
remove_doublet <- FALSE
path.to.10X.doublet.estimation <- "/home/hieunguyen/CRC1382/storage/resources/DoubletEstimation10X.csv"
num.PCA <- 25
num.PC.used.in.UMAP <- 25
num.PC.used.in.Clustering <- 25
cluster.resolution <- 0.5
path.to.filtered.barcodes <- "/home/hieunguyen/CRC1382/src/220311_Berres_MiedIII_scCITEseq/OUTPUT/1st_round"
for (sample in names(stage_lst)){
# filtered.barcodes <- readRDS(file.path(path.to.filtered.barcodes, sprintf("%s_1st_round/s9_output/remove_barcodes/%s_1st_round_remove_barcodes.rds", sample, sample)))
filtered.barcodes <- NULL
s.obj <- run_pipeline_GEX(path2src=path2src,
path2input=file.path(path2input, sprintf("GEX_single_%s", sample)),
path.to.logfile.dir=file.path(path.to.output, sprintf("%s_%s_round", sample, analysis.round), "logs"),
stage_lst=stage_lst[[sample]],
path.to.10X.doublet.estimation=path.to.10X.doublet.estimation,
MINCELLS=MINCELLS,
MINGENES=MINGENES,
PROJECT=PROJECT,
remove_doublet=remove_doublet,
save.RDS=save.RDS,
path.to.output=file.path(path.to.output, sprintf("%s_%s_round", sample, analysis.round)),
rerun=rerun,
DE.test="wilcox",
num.PCA=num.PCA,
num.PC.used.in.UMAP=num.PC.used.in.UMAP,
num.PC.used.in.Clustering=num.PC.used.in.Clustering,
use.sctransform=FALSE,
filtered.barcodes=filtered.barcodes,
filter.thresholds=filter.thresholds,
path.to.anno.contigs=path.to.anno.contigs,
path.to.count.clonaltype=path.to.count.clonaltype,
input.method = "CITESEQ",
cluster.resolution=cluster.resolution,
mode_cell_cycle_scoring = "gene_name",
my_random_seed = my_random_seed)
}
for (analysis.round in c("1st")){
path.to.downstream.rmd <- "/home/hieunguyen/CRC1382/src/220311_Berres_MiedIII_scCITEseq/downstream_analysis"
rmarkdown::render(file.path(path.to.downstream.rmd,
sprintf("%s_round", analysis.round),
sprintf("%s_round_downstream_analysis_LV20.Rmd", analysis.round)))
rmarkdown::render(file.path(path.to.downstream.rmd,
sprintf("%s_round", analysis.round),
sprintf("%s_round_downstream_analysis_PV20.Rmd", analysis.round)))
rmarkdown::render(file.path(path.to.downstream.rmd,
sprintf("%s_round", analysis.round),
sprintf("%s_round_downstream_analysis_LV21.Rmd", analysis.round)))
rmarkdown::render(file.path(path.to.downstream.rmd,
sprintf("%s_round", analysis.round),
sprintf("%s_round_downstream_analysis_PV21.Rmd", analysis.round)))
}
writeLines(capture.output(sessionInfo()), file.path(path.to.output, sprintf("%s_sessionInfo.txt", PROJECT)))
packageVersion("uwot")
packageVersion("celda")
is.null(NULL)
library(Seurat)
packageVersion("celda")
renv::restore("/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline/scRNA_GEX_pipeline_renv.loc")
renv::init()
require("renv")
renv::init()
setwd("/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline")
renv::init()
renv::restore("/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline/scRNA_GEX_pipeline_renv.loc")
renv::restore(lockfile = "/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline/scRNA_GEX_pipeline_renv.loc")
require("renv")
setwd("/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline")
renv::init()
require("renv")
setwd("/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline")
renv::init()
require("renv")
setwd("/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline")
renv::init()
gc()
rm(list = ls())
require("renv")
setwd("/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline")
renv::init()
require("renv")
setwd("/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline")
renv::init()
renv::restore(lockfile = "/home/hieunguyen/CRC1382/src/src_pipeline/scRNA_GEX_pipeline/scRNA_GEX_pipeline_renv.loc")
gc()
rm(list = ls())
